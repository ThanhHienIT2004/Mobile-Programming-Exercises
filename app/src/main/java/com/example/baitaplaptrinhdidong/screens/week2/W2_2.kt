package com.example.baitaplaptrinhdidong.screens.week2import androidx.compose.foundation.layout.Columnimport androidx.compose.foundation.layout.Rowimport androidx.compose.foundation.layout.Spacerimport androidx.compose.foundation.layout.fillMaxSizeimport androidx.compose.foundation.layout.fillMaxWidthimport androidx.compose.foundation.layout.heightimport androidx.compose.foundation.layout.paddingimport androidx.compose.foundation.layout.widthimport androidx.compose.material.icons.Iconsimport androidx.compose.material.icons.filled.AccountCircleimport androidx.compose.material.icons.filled.Homeimport androidx.compose.material.icons.filled.Listimport androidx.compose.material3.Buttonimport androidx.compose.material3.Iconimport androidx.compose.material3.IconButtonimport androidx.compose.material3.OutlinedTextFieldimport androidx.compose.material3.Textimport androidx.compose.runtime.Composableimport androidx.compose.runtime.getValueimport androidx.compose.runtime.mutableStateOfimport androidx.compose.runtime.rememberimport androidx.compose.runtime.setValueimport androidx.compose.ui.Alignmentimport androidx.compose.ui.Modifierimport androidx.compose.ui.text.font.FontWeightimport androidx.compose.ui.unit.dpimport androidx.compose.ui.unit.spimport androidx.lifecycle.viewmodel.compose.viewModelimport androidx.navigation.NavHostControllerimport com.example.baitaplaptrinhdidong.screens.base.BaseScreenimport com.example.baitaplaptrinhdidong.screens.components.TableItemimport com.example.baitaplaptrinhdidong.viewModels.BooksViewModelimport com.example.baitaplaptrinhdidong.viewModels.UsersViewModel@Composablefun W2_2(navController: NavHostController) {    var curScreen by remember { mutableStateOf("home") }    BaseScreen (        "Hệ thống quản lý thư viện",        true,        onBackClick = { navController.popBackStack() },        actionsBot = {            IconButton(onClick = { curScreen = "home" }, Modifier.weight(1f)) {                Column (                    horizontalAlignment = Alignment.CenterHorizontally                ) {                    Icon( imageVector = Icons.Filled.Home, contentDescription = "Home")                    Text("Quản lí", fontSize = 10.sp)                }            }            IconButton(onClick = { curScreen = "books" }, Modifier.weight(1f)) {                Column (                    horizontalAlignment = Alignment.CenterHorizontally                ) {                    Icon( imageVector = Icons.Filled.List, contentDescription = "Books")                    Text("Sách", fontSize = 10.sp)                }            }            IconButton(onClick = { curScreen = "users" }, Modifier.weight(1f)) {                Column (                    horizontalAlignment = Alignment.CenterHorizontally                ) {                    Icon( imageVector = Icons.Filled.AccountCircle, contentDescription = "Users")                    Text("Người dùng", fontSize = 10.sp)                }            }        }    ) { padding ->        Column (            modifier = Modifier.fillMaxSize()                .padding(padding),        ) {            Spacer(Modifier.height(30.dp))            Column (                modifier = Modifier.padding(horizontal = 12.dp)            ) {                when (curScreen) {                    "home" -> ManagerHomeEx2W2()                    "books" -> ManagerBooksEx2W2()                    "users" -> ManagerUserEx2W2()                }            }        }    }}// trang home@Composablefun ManagerHomeEx2W2() {    var nameUser by remember { mutableStateOf("") }    Text("Người dùng", fontWeight = FontWeight.Bold, fontSize = 24.sp )    Spacer(Modifier.height(10.dp))    Row {        OutlinedTextField(            value = nameUser,            onValueChange = {nameUser = it},            singleLine = true        )        Spacer(Modifier.width(10.dp))        Button(onClick = {}) { Text("Đổi") }    }    val titleTable = listOf("ID", "TÊN")    var dataTable = mutableListOf(        mutableListOf("1", " Đăng Quang"),        mutableListOf("2", "quang")    )    Spacer(Modifier.height(30.dp))    Text("Danh sách sách", fontWeight = FontWeight.Bold, fontSize = 24.sp)    Spacer(Modifier.height(30.dp))    Column (        modifier = Modifier.fillMaxWidth(),        horizontalAlignment = Alignment.CenterHorizontally    ) {        TableItem(titleTable, dataTable)    }}// quan li sach@Composablefun ManagerBooksEx2W2(viewModel: BooksViewModel = viewModel()) {    var nameBook by remember { mutableStateOf("") }    val titleTable = listOf("ID", "TÊN")    Text("Thêm sách", fontWeight = FontWeight.Bold, fontSize = 24.sp)    Spacer(Modifier.height(10.dp))    Row {        OutlinedTextField(            value = nameBook,            onValueChange = {nameBook = it},            singleLine = true,            placeholder = { Text("Nhập tên sách") }        )        Spacer(Modifier.width(10.dp))        Button(onClick = { viewModel.addItem(nameBook) }) { Text("Thêm") }    }    Spacer(Modifier.height(30.dp))    Text("Danh sách sách", fontWeight = FontWeight.Bold, fontSize = 24.sp)    Spacer(Modifier.height(30.dp))    Column (        modifier = Modifier.fillMaxWidth(),        horizontalAlignment = Alignment.CenterHorizontally    ) {        TableItem(titleTable, viewModel.dataTable)    }}// trang quan li nguoi dung@Composablefun ManagerUserEx2W2(viewModel: UsersViewModel = viewModel()) {    var nameUser by remember { mutableStateOf("") }    val titleTable = listOf("ID", "TÊN")    Text("Thêm người dùng", fontWeight = FontWeight.Bold, fontSize = 24.sp)    Spacer(Modifier.height(10.dp))    Row {        OutlinedTextField(            value = nameUser,            onValueChange = {nameUser = it},            singleLine = true,            placeholder = { Text("Nhập tên người dùng") }        )        Spacer(Modifier.width(10.dp))        Button(onClick = { viewModel.addItem(nameUser) }) { Text("Thêm") }    }    Spacer(Modifier.height(30.dp))    Text("Danh sách người dùng", fontWeight = FontWeight.Bold, fontSize = 24.sp)    Spacer(Modifier.height(30.dp))    Column (        modifier = Modifier.fillMaxWidth(),        horizontalAlignment = Alignment.CenterHorizontally    ) {        TableItem(titleTable, viewModel.dataTable)    }}